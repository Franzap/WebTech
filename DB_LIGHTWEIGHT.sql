drop database IF  EXISTS db_lightweight;
create database db_lightweight;
use db_lightweight;

CREATE TABLE `CATEGORIA_SCHEDA`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`NOME` varchar(255),
`DESCRIZIONE` varchar(255)
);

CREATE TABLE `CATEGORIA_ESERCIZIO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`NOME` varchar(255),
`DESCRIZIONE` varchar(255)
);


CREATE TABLE `CATEGORIA_CORSO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`NOME` varchar(255),
`DESCRIZIONE` varchar(255)
);


CREATE TABLE `UTENTE`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`USERNAME` varchar(255),
`PASSWORD` varchar(255),
`EMAIL` varchar(255),
`NOME` varchar(255),
`COGNOME` varchar(255),
`CF` varchar(16),
`DATA_NASCITA` date,
`LUOGO_DI_NASCITA` varchar(255),
`INDIRIZZO` varchar(255),
`SESSO` varchar(1)
);

CREATE TABLE `SCHEDA_ALLENAMENTO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`DATA_INIZIO` DATE NOT NULL,
`DURATA` TINYINT DEFAULT NULL,
`DATA_FINE` DATE DEFAULT NULL, 
`ID_CATEGORIA` BIGINT UNSIGNED NOT NULL,
constraint `APPARTENENZA_SCHEDA_CATEGORIA` 
FOREIGN KEY (ID_CATEGORIA) references CATEGORIA_SCHEDA(ID),
`ID_UTENTE` BIGINT UNSIGNED NOT NULL,
constraint `APPARTENENZA_SCHEDA_UTENTE` 
FOREIGN KEY (ID_UTENTE) references UTENTE(ID),
`ID_UTENTE_CREATORE` BIGINT UNSIGNED NOT NULL,
constraint `CREAZIONE_SCHEDA_UTENTE` 
FOREIGN KEY (ID_UTENTE_CREATORE) references UTENTE(ID)
);

CREATE TABLE `ESERCIZI`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`IMMAGINE` longblob,
`NOME` varchar(255),
`DESCRIZIONE` varchar(600),
`ESECUZIONE` varchar(255),
`ID_CATEGORIA` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_CATEGORIA_ESERCIZIO`
FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA_ESERCIZIO(ID)
);

CREATE TABLE `SERIE_ESERCIZI`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`ID_ESERCIZIO`BIGINT UNSIGNED NOT NULL,
`NUMERO_SERIE` TINYINT UNSIGNED,
`NUMERO_RIPETIZIONI` TINYINT UNSIGNED,
`DURATA_RIPOSO` TINYINT UNSIGNED,
`ID_SCHEDA` BIGINT UNSIGNED NOT NULL,
constraint `APPARTENENZA_ESERCIZIO_SCHEDA` 
FOREIGN KEY (ID_ESERCIZIO) references ESERCIZI(ID),
constraint `APPARTENENZA_SERIE_SCHEDA` 
FOREIGN KEY (ID_SCHEDA) references SCHEDA_ALLENAMENTO(ID)
);

CREATE TABLE `ABBONAMENTO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`COSTO` FLOAT,
`TIPOLOGIA` VARCHAR(255),
`DURATA` VARCHAR(255),
`NOME` VARCHAR(255),
`DESCRIZIONE` varchar(255)
);

CREATE TABLE `CORSO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`NOME` varchar(255) NOT NULL,
`DESCRIZIONE` varchar(255) NOT NULL,
`TIPOLOGIA` varchar(255) NOT NULL,
`ID_ABBONAMENTO` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_CORSO_ABBONAMENTO`
FOREIGN KEY (ID_ABBONAMENTO) REFERENCES ABBONAMENTO(ID),
`ID_CATEGORIA` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_CORSO_CATEGORIA`
FOREIGN KEY (ID_ABBONAMENTO) REFERENCES CATEGORIA_CORSO(ID)
);

CREATE TABLE `SLOT_PRENOTAZIONI`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`ORARIO_INIZIO` time,
`ORARIO_FINE` time,
`POSTI_DISPONIBILI` tinyint unsigned,
`GIORNO` varchar(255)
);

CREATE TABLE `PRENOTAZIONI_CORSO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`ID_CORSO` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_CORSO`
FOREIGN KEY (ID_CORSO) REFERENCES CORSO(ID),
`ID_PRENOTAZIONE` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_PRENOTAZIONE`
FOREIGN KEY (ID_PRENOTAZIONE) REFERENCES SLOT_PRENOTAZIONI(ID)
);
CREATE TABLE `ACQUISTO_ABBONAMENTO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`DATA_ACQUISTO` DATE NOT NULL,
`DATA_SCADENZA` DATE NOT NULL,
`ID_UTENTE` BIGINT UNSIGNED NOT NULL,
constraint FOREIGN KEY (ID_UTENTE) references UTENTE(ID),
`ID_ABBONAMENTO` BIGINT UNSIGNED NOT NULL,
constraint  FOREIGN KEY (ID_ABBONAMENTO) references ABBONAMENTO(ID)
);

CREATE TABLE `CERTIFICATO_MEDICO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`DATA_CREAZIONE` DATE NOT NULL,
`DATA_SCADENZA` DATE NOT NULL,
`TIPO` VARCHAR(255) NOT NULL,
`FILE` LONGBLOB NOT NULL
);

CREATE TABLE `ISCRIZIONE`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`DATA_INIZIO` DATE NOT NULL,
`DATA_FINE` DATE NOT NULL,
`COSTO` SMALLINT NOT NULL,
`TIPO` VARCHAR(255) NOT NULL,
`ID_CERTIFICATO` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_ISCRIZIONE_CERTIFICATO`
FOREIGN KEY (ID_CERTIFICATO) REFERENCES CERTIFICATO_MEDICO(ID),
`ID_UTENTE` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_UTENTE_ISCRIZIONE`
FOREIGN KEY (ID_UTENTE) REFERENCES UTENTE(ID)
);   

CREATE TABLE `PROVINCIA`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`NOME` varchar(255) NOT NULL,
`SIGLA` VARCHAR(2) NOT NULL,
`STATO` VARCHAR(255) NOT NULL
);

CREATE TABLE `CITTA`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`NOME` varchar(255)
);

CREATE TABLE `ORARI_PALESTRA`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`INTERVALLO` varchar(255),
`TIPO` VARCHAR(10),
`ORA_APERTURA` varchar(255) DEFAULT NULL,
`ORA_CHIUSURA` varchar(255) DEFAULT NULL
);

CREATE TABLE `PERMESSO`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`RUOLO` TINYINT,
`PERMESSO` varchar(255)
);

CREATE TABLE `PALESTRA`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`VIA` VARCHAR(255) NOT NULL,
`NUMERO CIVICO` VARCHAR(5),
`CAP` VARCHAR(10) NOT NULL, 
`P.IVA` VARCHAR(11) NOT NULL, 
`CITTA` VARCHAR(255) NOT NULL,
`PROVINCIA`VARCHAR(2) NOT NULL,
`NUMERO_TELEFONICO` VARCHAR(12) NOT NULL,
`PEC` VARCHAR(320) DEFAULT NULL,
`EMAIL` VARCHAR(320) DEFAULT NULL
);  

CREATE TABLE `LINK_PALESTRA`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`TIPO` VARCHAR(255) NOT NULL,
`URL` VARCHAR(2083) NOT NULL,
`ID_PALESTRA` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_PALESTRA`
FOREIGN KEY (ID_PALESTRA) REFERENCES PALESTRA(ID)
);

CREATE TABLE `RUOLO_UTENTE`(
`ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
`ID_PERMESSO` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_PERMESSO`
FOREIGN KEY (ID_PERMESSO) REFERENCES PERMESSO(ID),
`ID_UTENTE` BIGINT UNSIGNED NOT NULL,
CONSTRAINT `APPARTENENZA_UTENTE`
FOREIGN KEY (ID_UTENTE) REFERENCES UTENTE(ID)
); 

